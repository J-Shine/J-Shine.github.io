---
layout: post
title:  "[10845번] 큐"
date:   2020-07-16 14:35
categories: ["baekjoon-algorithm"]
author: "J-Shine"
---
# 시간 제한
0.5초<br><br>

# 메모리 제한
256MB<br><br>

# 문제  
정수를 저장하는 큐를 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.<br>
명령은 총 여섯 가지이다.<br>
push X: 정수 X를 큐에 넣는 연산이다.<br>
pop: 큐에서 가장 앞에 있는 정수를 빼고, 그 수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.<br>
size: 큐에 들어있는 정수의 개수를 출력한다.<br>
empty: 큐가 비어있으면 1, 아니면 0을 출력한다.<br>
front: 큐의 가장 앞에 있는 정수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.<br>
back: 큐의 가장 뒤에 있는 정수를 출력한다. 만약 큐에 들어있는 정수가 없는 경우에는 -1을 출력한다.<br><br>

# 입력  

첫째 줄에 주어지는 명령의 수 N (1 ≤ N ≤ 10,000)이 주어진다. 둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다.<br>
주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다. 문제에 나와있지 않은 명령이 주어지는 경우는 없다.<br><br>
# 출력  

출력해야하는 명령이 주어질 때마다, 한 줄에 하나씩 출력한다.<br><br>

# STL queue를 이용한 내 풀이

```c++
#include <bits/stdc++.h>
using namespace std;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	queue<int> q;
	int n(0), m(0);
	string command;

	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> command;
		if (command == "push") {
			cin >> m;
			q.push(m);
		}
		else if (command == "pop") {
			if (!q.empty()) {
				cout << q.front() << "\n";
				q.pop();
			}
			else
				cout << "-1" << "\n";
		}
		else if (command == "size") {
			cout << q.size() << "\n";
		}
		else if (command == "empty") {
			if(!q.empty()) cout << 0 << "\n";
			else cout << 1 << "\n";
		}
		else if (command == "front") {
			if (!q.empty()) cout << q.front() << "\n";
			else cout << "-1" << "\n";
		}
		else if (command == "back") {
			if (!q.empty()) cout << q.back() << "\n";
			else cout << "-1" << "\n";
		}
	}
}
```
queue를 사용하여보았다.<br><br>

# queue를 구현한 내 풀이
```
#include <bits/stdc++.h>
using namespace std;

int empt(int& head, int& tail) {
	if (head == tail) return 1;
	else return 0;
}

void push(int arr[], int& tail, int x) {
	arr[tail++] = x;
}
void pop(int arr[], int& head, int& tail) {
	if(!empt(head, tail)) cout << arr[head++] << "\n";
	else cout << -1 << "\n";
}
void size(int& head, int& tail) {
	cout << tail - head << "\n";
}

void front(int arr[], int& head, int& tail) {
	if (!empt(head, tail)) cout << arr[head] << "\n";
	else cout << -1 << "\n";
}
void back(int arr[], int& head, int& tail) {
	if (!empt(head, tail)) cout << arr[tail - 1] << "\n";
	else cout << -1 << "\n";
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n(0), m(0), q[10005], head(0), tail(0);
	string command;

	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> command;
		if (command == "push") {
			cin >> m;
			push(q, tail, m);
		}
		else if (command == "pop") {
			pop(q, head, tail);
		}
		else if (command == "size") {
			size(head, tail);
		}
		else if (command == "empty") {
			cout << empt(head, tail) << "\n";
		}
		else if (command == "front") {
			front(q, head, tail);
		}
		else if (command == "back") {
			back(q, head, tail);
		}
	}
}
```
이제까지 함수를 따로 구현하여 푼 적이 별로 없다보니 함수를 구현했을 때 call-by-reference로 해야 할 것(head,tail)을 call-by-value로 하는 실수를 했다.<br>
array는 당연히 참조자로 전달해야 한다는 생각을 했고 그렇게 했지만 int는 그 생각을 못했다.<br>
**함수 파라미터가 참조자인지 아닌지를 확실히 생각해보기**<br>
