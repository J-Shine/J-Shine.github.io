---
layout: post
title:  "[백준 15650번] N과 M(2)"
date:   2020-08-28 22:53
categories: ["baekjoon-algorithm"]
author: "J-Shine"
---
# \[백준 15650번] N과 M(2) C++ 풀이
# 시간 제한
1초<br><br>

# 메모리 제한
512MB<br><br>

# 문제  
자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.<br>
1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열<br>
고른 수열은 오름차순이어야 한다.<br><br>

# 입력  
첫째 줄에 N과 M이 주어진다.(1 ≤ M ≤ N ≤ 8)<br><br>

# 출력  
한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 중복되는 수열을 여러 번 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다.<br>
수열은 사전 순으로 증가하는 순서로 출력해야 한다.<br><br>

# 내 맞은 풀이(백트래킹)

```c++
#include<bits/stdc++.h>
using namespace std;

int n(0), m(0);
int arr[10] = { 0 };
bool isUsed[10] = { 0 };

void subSeq(int cur, int latestNum) {
	if (cur == m) {
		for (int i = 0; i < m; i++) {
			cout << arr[i] << ' ';
		}
		cout << '\n';
		return;
	}
	for (int i = latestNum + 1; i <= n; i++) {
		if (!isUsed[i]) {
			isUsed[i] = true;
			arr[cur] = i;
			subSeq(cur + 1, i);
			isUsed[i] = false;
		}
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n >> m;
	subSeq(0, 0);
	return 0;
}
```
백트래킹을 이용한다.<br>
이전 단계에서 어떤 수를 넣었는지 기억해서 다음 단계엔 그 수부터 for문 돌린다.<br><br>

# 내 맞은 풀이(next_permutation)

```c++
#include<bits/stdc++.h>
using namespace std;

int n(0), m(0);
int arr[10];

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		if (i < m) arr[i] = 0;
		else arr[i] = 1;
	}
	do {
		for (int i = 0; i < n; i++) {
			if (arr[i] == 0) cout << i + 1 << ' ';
		}
		cout << '\n';
	} while (next_permutation(arr, arr + n));
}
```

next_permutation()을 이용하여 조합의 수를 구하는 것과 같다.<br><br>

