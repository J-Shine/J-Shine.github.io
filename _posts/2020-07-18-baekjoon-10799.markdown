---
layout: post
title:  "[백준 10799번] 쇠막대기"
date:   2020-07-18 22:05
categories: ["baekjoon-algorithm"]
author: "J-Shine"
---
# \[백준 10799번] 쇠막대기 C++ 풀이
# 시간 제한
1초<br><br>

# 메모리 제한
256MB<br><br>

# 문제  
여러 개의 쇠막대기를 레이저로 절단하려고 한다. 효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자른다. 쇠막대기와 레이저의 배치는 다음 조건을 만족한다.<br><br>
쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다. - 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓는다.<br>
각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.<br>
레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다.<br><br>
아래 그림은 위 조건을 만족하는 예를 보여준다. 수평으로 그려진 굵은 실선은 쇠막대기이고, 점은 레이저의 위치, 수직으로 그려진 점선 화살표는 레이저의 발사 방향이다.<br><br>
이러한 레이저와 쇠막대기의 배치는 다음과 같이 괄호를 이용하여 왼쪽부터 순서대로 표현할 수 있다.<br><br>
레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 ‘( ) ’ 으로 표현된다. 또한, 모든 ‘( ) ’는 반드시 레이저를 표현한다.<br>
쇠막대기의 왼쪽 끝은 여는 괄호 ‘ ( ’ 로, 오른쪽 끝은 닫힌 괄호 ‘) ’ 로 표현된다. <br><br>
위 예의 괄호 표현은 그림 위에 주어져 있다.<br>
쇠막대기는 레이저에 의해 몇 개의 조각으로 잘려지는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘려지고, 이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘려진다.<br>
쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성하시오.<br><br>
# 입력  
한 줄에 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 공백없이 주어진다. 괄호 문자의 개수는 최대 100,000이다.<br><br>
# 출력  

잘려진 조각의 총 개수를 나타내는 정수를 한 줄에 출력한다.<br><br>

# 내 풀이

```c++
#include<bits/stdc++.h>
using namespace std

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	/*
	()(((()())(())()))(())
	0L0123L3L223L22L1001L0
	 0    3 31  31 211  11
	*/
	stack<char> stk;
	string s;
	int cnt = 0;
	getline(cin, s);
	for (int i = 0; i < s.length(); i++) {
		if (s[i] == '(') stk.push(s[i]);
		else if (s[i] == ')') {
			if (s[i - 1] == '(') {
				cnt = cnt + stk.size() - 1;
				stk.pop();
			}
			else {
				cnt++;
				stk.pop();
			}
		}
	}
	cout << cnt;
}
```
레이저를 한번 쏠 때, 겹친 쇠막대기의 개수만큼 새로운 조각이 생긴다는 사실을 이용한다.<br>
쇠막대기의 개수는 자연스럽게 stack의 size가 되고,<br>
닫는 괄호가 나왔을 때 바로앞이 여는 괄호였을 경우 레이저이므로 stack의 size만큼 새로운 조각이 생긴다.<br>
닫는 괄호가 나왔을 때 바로 앞도 닫는 괄호였을 경우 쇠막대기이므로 그냥 1개의 쇠막대기만 더해진다.<br>
[2504번: 괄호의 값](https://j-shine.github.io//baekjoon-algorithm/2020/07/18/baekjoon-2504.html) 문제와 매우 비슷하다고 생각한다.<br><br>
