I"&<h1 id="바킹독님의-실전알고리즘배우기-4강듣고-요약">바킹독님의 실전알고리즘배우기 4강듣고 요약</h1>
<p><a href="https://blog.encrypted.gg/932">바킹독의 실전 알고리즘 4강 링크</a></p>

<p><img src="https://user-images.githubusercontent.com/61873510/87283103-eab3ad00-c52f-11ea-856f-d56997a3c75f.png" alt="image" /><br />
<img src="https://user-images.githubusercontent.com/61873510/87283178-fe5f1380-c52f-11ea-9bb0-ee0356463ed0.png" alt="image" /><br /><br /></p>

<h1 id="연결리스트의-성질">연결리스트의 성질</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87283475-4b42ea00-c530-11ea-9de8-224258aa03c9.png" alt="image" /><br /></p>
<h1 id="연결리스트의-종류">연결리스트의 종류</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87283590-67df2200-c530-11ea-9861-6811ab19476a.png" alt="image" /><br /></p>
<h1 id="배열-vs-연결리스트">배열 vs 연결리스트</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87283681-834a2d00-c530-11ea-8086-caab3ebe99fe.png" alt="image" /><br /></p>

<h1 id="연결리스트의-구현">연결리스트의 구현</h1>
<p><a href="">나중에 추가</a></p>

<h1 id="야매-연결리스트">야매 연결리스트</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87286478-dffb1700-c533-11ea-8928-62febfef43f8.png" alt="image" /><br /></p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;bits/stdc++.h&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">const</span> <span class="kt">int</span> <span class="n">MX</span> <span class="o">=</span> <span class="mi">1000005</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">dat</span><span class="p">[</span><span class="n">MX</span><span class="p">],</span> <span class="n">pre</span><span class="p">[</span><span class="n">MX</span><span class="p">],</span> <span class="n">nxt</span><span class="p">[</span><span class="n">MX</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">unused</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">insert</span><span class="p">(</span><span class="kt">int</span> <span class="n">addr</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num</span><span class="p">){</span>
  <span class="n">dat</span><span class="p">[</span><span class="n">unused</span><span class="p">]</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
  <span class="n">pre</span><span class="p">[</span><span class="n">unused</span><span class="p">]</span> <span class="o">=</span> <span class="n">addr</span><span class="p">;</span>
  <span class="n">nxt</span><span class="p">[</span><span class="n">unused</span><span class="p">]</span> <span class="o">=</span> <span class="n">nxt</span><span class="p">[</span><span class="n">addr</span><span class="p">];</span>
  <span class="k">if</span><span class="p">(</span><span class="n">nxt</span><span class="p">[</span><span class="n">addr</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="n">pre</span><span class="p">[</span><span class="n">nxt</span><span class="p">[</span><span class="n">addr</span><span class="p">]]</span> <span class="o">=</span> <span class="n">unused</span><span class="p">;</span>
  <span class="n">nxt</span><span class="p">[</span><span class="n">addr</span><span class="p">]</span> <span class="o">=</span> <span class="n">unused</span><span class="p">;</span>
  <span class="n">unused</span><span class="o">++</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">erase</span><span class="p">(</span><span class="kt">int</span> <span class="n">addr</span><span class="p">){</span>
  <span class="n">nxt</span><span class="p">[</span><span class="n">pre</span><span class="p">[</span><span class="n">addr</span><span class="p">]]</span> <span class="o">=</span> <span class="n">nxt</span><span class="p">[</span><span class="n">addr</span><span class="p">];</span>
  <span class="k">if</span><span class="p">(</span><span class="n">nxt</span><span class="p">[</span><span class="n">addr</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="n">pre</span><span class="p">[</span><span class="n">nxt</span><span class="p">[</span><span class="n">addr</span><span class="p">]]</span> <span class="o">=</span> <span class="n">pre</span><span class="p">[</span><span class="n">addr</span><span class="p">];</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">fill</span><span class="p">(</span><span class="n">pre</span><span class="p">,</span> <span class="n">pre</span><span class="o">+</span><span class="n">MX</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">);</span>
  <span class="n">fill</span><span class="p">(</span><span class="n">nxt</span><span class="p">,</span> <span class="n">nxt</span><span class="o">+</span><span class="n">MX</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">);</span>
  <span class="c1">//insert_test();</span>
  <span class="c1">//erase_test();</span>
<span class="p">}</span>
</code></pre></div></div>
<p>0번 노드는 시작점을 알리는 dummy node이다.<br />
실무에선 쓸 수 없고 코테에서만 가능한 방식<br /><br /></p>

<h1 id="stl-list">STL list</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87286727-2ea8b100-c534-11ea-8317-b955cc4000c1.png" alt="image" /><br />
STL의 list는 이중연결리스트이다.<br />
<a href="https://j-shine.github.io//c++/2020/07/13/stl-list.html">STL list 관련 자세한 포스팅</a><br /><br /></p>

<h1 id="연습문제">연습문제</h1>
<p><a href="">BOJ 1406번</a><br /><br /></p>
<h1 id="손코딩문제-1">손코딩문제 1</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87287325-eccc3a80-c534-11ea-9424-a20a4e91c1ab.png" alt="image" /><br /></p>
<h1 id="손코딩문제-2">손코딩문제 2</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87287423-0d949000-c535-11ea-8cb2-70ee03780742.png" alt="image" /><br /></p>
<h1 id="손코딩문제-3">손코딩문제 3</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87287482-1edd9c80-c535-11ea-95db-2ceecace3d91.png" alt="image" /><br /></p>
:ET