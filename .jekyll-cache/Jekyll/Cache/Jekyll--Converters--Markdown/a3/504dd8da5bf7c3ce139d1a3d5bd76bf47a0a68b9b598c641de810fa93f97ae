I"H<h1 id="바킹독님의-실전알고리즘배우기-5강듣고-요약">바킹독님의 실전알고리즘배우기 5강듣고 요약</h1>
<p><a href="https://blog.encrypted.gg/933">바킹독의 실전 알고리즘 5강 링크</a></p>

<p><img src="https://user-images.githubusercontent.com/61873510/87318640-932f3480-c563-11ea-97cb-9ff6499f9984.png" alt="image" /><br />
<img src="https://user-images.githubusercontent.com/61873510/87318667-9e826000-c563-11ea-8056-3c28511ea993.png" alt="image" /><br /><br /></p>
<h1 id="스택의-성질">스택의 성질</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87318766-ba860180-c563-11ea-8e86-78815d37d5c2.png" alt="image" /><br /><br /></p>
<h1 id="스택의-구현">스택의 구현</h1>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;bits/stdc++.h&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">const</span> <span class="kt">int</span> <span class="n">MX</span> <span class="o">=</span> <span class="mi">1000005</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">dat</span><span class="p">[</span><span class="n">MX</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">push</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">){</span>
  <span class="n">dat</span><span class="p">[</span><span class="n">pos</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">pop</span><span class="p">(){</span>
  <span class="n">pos</span><span class="o">--</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">top</span><span class="p">(){</span>
  <span class="k">return</span> <span class="n">dat</span><span class="p">[</span><span class="n">pos</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">test</span><span class="p">(){</span>
  <span class="n">push</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span> <span class="n">push</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span> <span class="n">push</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">top</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span> <span class="c1">// 3</span>
  <span class="n">pop</span><span class="p">();</span> <span class="n">pop</span><span class="p">();</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">top</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span> <span class="c1">// 5</span>
  <span class="n">push</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span> <span class="n">push</span><span class="p">(</span><span class="mi">12</span><span class="p">);</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">top</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span> <span class="c1">// 12</span>
  <span class="n">pop</span><span class="p">();</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">top</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span> <span class="c1">// 10</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
	<span class="n">test</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>
<p>스택은 구현이 쉽다.<br />
그래도 물론 STL의 stack을 이용하는 것이 좋다.<br /><br /></p>
<h1 id="stl-stack">STL stack</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87319148-3718e000-c564-11ea-84e9-66fbeb24d26b.png" alt="image" /><br />
STL stack의 기본적인 함수로는 push(), pop(), top(), size(), empty()가 있다.<br />
<strong>stack이 비어있는데 pop()이나 top()을 호출하면 runtime error가 발생한다.</strong><br /></p>

<h1 id="연습문제">연습문제</h1>
<p><a href="https://j-shine.github.io//baekjoon-algorithm/2020/07/16/baekjoon-10828.html">BOJ 10828번</a><br /><br /></p>
:ET