I"kF<h1 id="바킹독님의-실전알고리즘배우기-3강듣고-요약">바킹독님의 실전알고리즘배우기 3강듣고 요약</h1>
<p><a href="https://blog.encrypted.gg/927">바킹독의 실전 알고리즘 3강 링크</a></p>

<p><img src="https://user-images.githubusercontent.com/61873510/87042100-25ff6480-c22e-11ea-917a-2fb3a8337c75.png" alt="image" /><br />
<img src="https://user-images.githubusercontent.com/61873510/87042144-36174400-c22e-11ea-9ee1-da4789ed2a34.png" alt="image" /><br /><br /></p>

<h1 id="배열의-성질">배열의 성질</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87042721-01f05300-c22f-11ea-99ba-432c8224203d.png" alt="image" /><br />
배열의 공간 지역성 때문에 cache hit rate가 높다.<br /><br /></p>
<h1 id="insert와-erase-함수의-구현-">insert와 erase 함수의 구현 &amp;</h1>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;bits/stdc++.h&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">insert</span><span class="p">(</span><span class="kt">int</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">num</span><span class="p">,</span> <span class="kt">int</span> <span class="n">arr</span><span class="p">[],</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">len</span><span class="p">){</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">len</span><span class="p">;</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="n">idx</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">)</span>
    <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
  <span class="n">arr</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
  <span class="n">len</span><span class="o">++</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">erase</span><span class="p">(</span><span class="kt">int</span> <span class="n">idx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">arr</span><span class="p">[],</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">len</span><span class="p">){</span>
  <span class="n">len</span><span class="o">--</span><span class="p">;</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">idx</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">len</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">printArr</span><span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">[],</span> <span class="kt">int</span><span class="o">&amp;</span> <span class="n">len</span><span class="p">){</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">len</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="sc">' '</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n\n</span><span class="s">"</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">insert_test</span><span class="p">(){</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"***** insert_test *****</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">};</span>
  <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
  <span class="n">insert</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span> <span class="c1">// 10 20 30 40</span>
  <span class="n">printArr</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
  <span class="n">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span> <span class="c1">// 10 50 20 30 40</span>
  <span class="n">printArr</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
  <span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">15</span><span class="p">,</span> <span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span> <span class="c1">// 15 10 50 20 30 40</span>
  <span class="n">printArr</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">erase_test</span><span class="p">(){</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"***** erase_test *****</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">10</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">70</span><span class="p">,</span> <span class="mi">20</span><span class="p">};</span>
  <span class="kt">int</span> <span class="n">len</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
  <span class="n">erase</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span> <span class="c1">// 10 50 40 30 20</span>
  <span class="n">printArr</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
  <span class="n">erase</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span> <span class="c1">// 10 40 30 20</span>
  <span class="n">printArr</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
  <span class="n">erase</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span> <span class="c1">// 10 40 30</span>
  <span class="n">printArr</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">insert_test</span><span class="p">();</span>
  <span class="n">erase_test</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="배열의-멤버를-모두-특정-값으로-초기화시키기">배열의 멤버를 모두 특정 값으로 초기화시키기</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87043816-9c04cb00-c230-11ea-97de-2b36f53c7fb8.png" alt="image" /><br />
2번 for문을 직접 돌리거나,<br />
3번 fill 함수를 이용하면 좋다.<br />
(1번은 실수할 여지가 있다.)<br /><br /></p>
<h1 id="vector-사용하기">vector 사용하기</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87044577-b25f5680-c231-11ea-951b-f0c20596a30e.png" alt="image" /><br />
vector에서는 iterator(v.begin())를 이용하고, <br />
v.push_back(), v.pop_back() -&gt; O(1)<br />
v.insert(), v.erase() -&gt; O(N) 등 함수롤 이용하여 데이터를 수정한다.<br /><br /></p>

<h1 id="range-based-for-loopc11-이상-사용하면-편하다">range-based for loop(C++11 이상) 사용하면 편하다.</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87045106-74166700-c232-11ea-951b-a9211c28bcb4.png" alt="image" /><br />
3번처럼 vector를 쓰면 무한루프에 빠지게 된다.<br />
-&gt; vector는 unsigned int를 반환하기 때문에 0보다 작은 값이 없다.<br />
   따라서 0 - 1 = 4294967295(2^32-1)가 된다.<br />
<a href="https://j-shine.github.io//c++/2020/07/10/range-based-for-loop-and-auto.html">range-based for loop</a>를 쓰면 for문을 돌기 편리하다.<br /><br /></p>

<h1 id="연습문제-1">연습문제 1</h1>
<p><a href="https://j-shine.github.io//baekjoon-algorithm/2020/07/08/baekjoon-10808.html">BOJ 10808번</a><br /></p>

<h1 id="연습문제-2">연습문제 2</h1>
<p><img src="https://user-images.githubusercontent.com/61873510/87046364-1256fc80-c234-11ea-89d9-a847a814de1e.png" alt="image" /><br /></p>
<h1 id="내-풀이">내 풀이</h1>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">freq</span><span class="p">[</span><span class="mi">100</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span> <span class="p">};</span>
<span class="kt">int</span> <span class="nf">func2</span><span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">N</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">freq</span><span class="p">[</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">freq</span><span class="p">[</span><span class="mi">100</span> <span class="o">-</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><strong>이렇게 하면 arr[i]가 0일 때 freq[-1]에 접근하기 때문에 runtime error가 발생할 수 있다고 바킹독님께서 지적해주셨다
 (오류를 지적해주셔서 감사합니당ㅎㅎ 앞으로도 누구든지 블로그 글에 대한 오류가 있으면 지적해주시면 감사하겠습니다!)</strong><br />
 그래서 실제로 돌려봤는데 <strong>띠용</strong>하는 일이 벌어져서 그것에 대한 자세한 사항은 <a href="https://j-shine.github.io//c++/2020/07/12/global-array.html">이 글</a>에 적어두었다.<br />
 또한 말씀해주신 대로 고친 풀이는 아래와 같다.<br /><br /></p>

<h1 id="고친-풀이">고친 풀이</h1>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">freq</span><span class="p">[</span><span class="mi">101</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span> <span class="p">};</span>
<span class="kt">int</span> <span class="nf">func2</span><span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">N</span><span class="p">)</span> <span class="p">{</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">freq</span><span class="p">[</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">freq</span><span class="p">[</span><span class="mi">100</span> <span class="o">-</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">&gt;=</span> <span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="baaaaaaaarkingdog님의-풀이">baaaaaaaarkingDog님의 풀이</h1>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">func2</span><span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">N</span><span class="p">){</span>
  <span class="kt">int</span> <span class="n">occur</span><span class="p">[</span><span class="mi">101</span><span class="p">]</span> <span class="o">=</span> <span class="p">{};</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">occur</span><span class="p">[</span><span class="mi">100</span><span class="o">-</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
      <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="n">occur</span><span class="p">[</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET